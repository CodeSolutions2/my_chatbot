name: openAIassistant Process Frontend data on the Backend

on:
  repository_dispatch:
    types: [trigger-openAIassistant]

jobs:
  call_endpoint_after_trigger:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Get repository files (equivalent to git pull)
        uses: actions/checkout@v2

      - name: Create input text
        run: INPUT_TEXT=$(echo "Read the content of a file respond to the following request:${{ github.event.client_payload.fromrepob }}. Format the output concisely with only the response, use the least number of words."); echo "INPUT_TEXT = $INPUT_TEXT"; input_text=$(curl -H 'Accept:application/vnd.github+json' -X GET https://raw.githubusercontent.com/CodeSolutions2/frontend_backend_message_passing_central_repository_v0/main/openAIassistant/cb.txt | cut -d '|' -f 1); echo "GET request - $input_text"; INPUT_TEXT1=$(echo "Read the content of a file respond to the following request:${input_text}. Format the output concisely with only the response, use the least number of words."); echo "INPUT_TEXT1 = $INPUT_TEXT1"; json_string_add_messages_to_thread_var="$(echo '{"role":"user", "content":"'$INPUT_TEXT1'"}' | jq -c)"; echo "json_string_add_messages_to_thread_var = $json_string_add_messages_to_thread_var"; THREAD_MESSAGE_ID=$(curl -X POST https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/messages -H "Content-Type:application/json" -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY_ASSISTANT }}" -H "OpenAI-Beta:assistants=v2" -d "$json_string_add_messages_to_thread_var" | jq '.id' | sed 's/"//g'); echo "THREAD_MESSAGE_ID = $THREAD_MESSAGE_ID"; 

      - name: Create RUN_ID payload
        run: json_string_create_run_var="$(echo '{"assistant_id":"'${{ secrets.ASSISTANT_ID }}'"}' | jq -c)"; echo "json_string_create_run_var = $json_string_create_run_var"; RUN_ID=$(curl -X POST https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/runs -H "Content-Type:application/json" -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY_ASSISTANT }}" -H "OpenAI-Beta:assistants=v2" -d "$json_string_create_run_var" | jq '.id' | sed 's/"//g'); echo "RUN_ID = $RUN_ID"; run_status="queued"; c=0; max_allowed_loops=30; while [[ $run_status != "completed" ]] && [[ $c < $max_allowed_loops ]]; do
            run_status=$(curl -X GET https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/runs/$RUN_ID -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY_ASSISTANT }}" -H "OpenAI-Beta:assistants=v2" | jq '.status' | sed 's/"//g'); 
            echo "c = $c";
            echo "run_status = $run_status";
            sleep 30; 
            c=$(($c + 1));
          done;

      - name: Obtain model response
        run: model_response=$(curl -X GET https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/messages -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY_ASSISTANT }}" -H "Content-Type:application/json" -H "OpenAI-Beta:assistants=v2" | jq '.data[0].content[0].text.value' | sed 's/"//g'); echo "model_response = $model_response"; echo "$model_response" >> openAIassistant_response;
        
      - name: Commit and push changes
        run: git config --global user.email "j622amilah@gmail.com"; git config --global user.name "CodeSolutions2"; git config --global pull.rebase true; git add -A; git diff-index --quiet HEAD || git commit -m "add files"; git push https://${{ secrets.REPOA_MY_CHATBOT }}@github.com/CodeSolutions2/my_chatbot.git

name: openAIassistant Process Frontend data on the Backend

on:
  repository_dispatch:
    types: [trigger-openAIassistant]

jobs:
  call_endpoint_after_trigger:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Get repository files (equivalent to git pull)
        uses: actions/checkout@v2

      - name: Run commands
        run: INPUT_TEXT=$(echo "Read the content of a file respond to the following request:${{ github.event.client_payload.fromrepob }}. Format the output concisely with only the response, use the least number of words."); echo "INPUT_TEXT = $INPUT_TEXT" >> openAIassistant_response; json_string_add_messages_to_thread_var="$(echo '{"role":"user", "content":"'$INPUT_TEXT'"}' | jq -c)"; echo "json_string_add_messages_to_thread_var = $json_string_add_messages_to_thread_var" >> openAIassistant_response; THREAD_MESSAGE_ID=$(curl https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/messages -H "Content-Type:application/json" -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY }}" -H "OpenAI-Beta:assistants=v2" -d "$json_string_add_messages_to_thread_var" | jq '.id' | sed 's/"//g'); echo "THREAD_MESSAGE_ID = $THREAD_MESSAGE_ID" >> openAIassistant_response; 

      - name: Create RUN_ID payload
        run: json_string_create_run_var="$(echo '{"assistant_id":"'${{ secrets.ASSISTANT_ID }}'"}' | jq -c)"; echo "json_string_create_run_var = $json_string_create_run_var" >> openAIassistant_response; dynamic_url="$(echo '');
        
      - name: Create RUN_ID
        run: RUN_ID=$(curl -X POST https://api.openai.com/v1/threads/${{ secrets.THREAD_ID }}/runs -H "Authorization:Bearer ${{ secrets.OPENAI_API_KEY }}" -H "Content-Type:application/json" -H "OpenAI-Beta:assistants=v2" -d "$json_string_create_run_var" | jq '.id' | sed 's/"//g'); echo "RUN_ID = $RUN_ID" >> openAIassistant_response;

      - name: Commit and push changes
        run: git config --global user.email "j622amilah@gmail.com"; git config --global user.name "CodeSolutions2"; git config --global pull.rebase true; git add .; git commit -m "add files"; git push https://${{ secrets.REPOA_MY_CHATBOT }}@github.com/CodeSolutions2/my_chatbot.git
